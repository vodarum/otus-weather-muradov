(()=>{"use strict";class t{state={};events={};constructor(t,e={}){this.state={...this.state,...e},t.innerHTML=this.render(),this.el=t,this.onMount(),Promise.resolve().then((()=>this.subscribeToEvents()))}onMount(){}render(){return""}setState(t){this.state={...this.state,...t},this.el.innerHTML=this.render(),this.subscribeToEvents()}subscribeToEvents(){Object.entries(this.events).forEach((([t,e])=>{const[r,s]=t.split("@");this.el.querySelectorAll(s).forEach((t=>{t.addEventListener(r,e)}))}))}}class e{latitude=null;longitude=null;constructor(t,e){this.latitude=t,this.longitude=e}}class r{city=null;temp=null;icon=null;coord=new e;constructor(t){this.city=t?.name??null,this.temp=t?.main.temp??null,this.icon=t?.weather[0].icon??null,this.coord=new e(t?.coord.lat??null,t?.coord.lon??null)}}const s=new class{render(t,e){return t=this.replaceLoop(t,e),t=this.replaceCondition(t,e),(t=this.replaceVariable(t,e)).replace(/\s+(?=[.,?!:;])/,"")}replaceVariable(t,e){return t.replace(/{{(.[^}}]+)}}/gm,((t,r)=>/\./gm.test(r)?r.split(".").reduce(((t,e)=>t[e]??t),e):e[r]||""))}replaceCondition(t,e){return t.replace(/{{if (\w+)}}(.*?){{endif}}/gms,((t,r,s)=>("isFirst"===r||"isLast"===r||"notIsFirst"===r||"notIsLast"===r)&&e.index[r]||e[r]?this.render(s,e):""))}replaceLoop(t,e){return t.replace(/{{for (\w+) as (\w+)}}(.+?){{endfor}}/gms,((t,r,s,n)=>(e[r]||[]).reduce(((t,e,r,a)=>{const i={index:{value:r,isFirst:0===r,isLast:r===a.length-1,notIsFirst:0!==r,notIsLast:r!==a.length-1}};return i[s]=e,t+this.render(n,i)}),"")))}};class n extends t{render(){return"{}"===JSON.stringify(this.state)?super.render():s.render('{{if icon}}<img src="http://openweathermap.org/img/w/{{icon}}.png" class="weather-main__img">{{endif}}\n      <div class="weather-main__text">\n        {{if city}}<p>Город: {{city}}</p>{{endif}}\n        {{if temp}}<p>Температура: {{temp}}&#176;С</p>{{endif}}\n      </div>',this.state)}}class a extends t{render(){return"{}"===JSON.stringify(this.state)?super.render():s.render('<img src="https://static-maps.yandex.ru/1.x/?ll={{longitude}},{{latitude}}&size=650,350&z=12&l=map">',this.state)}}class i extends t{render(){return"{}"===JSON.stringify(this.state)?super.render():s.render('{{for weatherHistory as item}}\n        <span class="weather-history__item" data-wh-item-id="{{index.value}}">{{item.city}}</span>\n      {{endfor}}',this.state)}}class o extends e{country=null;city=null;constructor(t){super(t?.latitude??null,t?.longitude??null),this.country=t?.country??null,this.city=t?.city??null}}const c=new class{LOCATION_URL="https://get.geojs.io/v1/ip/geo.json";WEATHER_URL="https://api.openweathermap.org/data/2.5/weather";WEATHER_API_KEY="1cf44d73b10a208539e8d4267c92ac9f";async getCurrentLocationInfo(){let t=new o;try{const e=await fetch(this.LOCATION_URL);if(!e.ok)throw new Error(`HTTP response status ${e.status}`);const r=await e.json();t=new o(r)}catch(t){console.error(`Error in API.getCurrentLocationInfo: ${t.message}`)}return t}async getWeatherInfoByLocationCoord(t,e){let s=new r;try{const n=`${this.WEATHER_URL}?lat=${t}&lon=${e}&appid=${this.WEATHER_API_KEY}&units=metric&lang=ru`,a=await fetch(n);if(!a.ok)throw new Error(`HTTP response status ${a.status}`);const i=await a.json();s=new r(i)}catch(t){console.error(`Error in API.getWeatherInfoByLocationCoord: ${t.message}`)}return s}async getWeatherInfoByLocationName(t){let e=new r;if(t)try{const s=`${this.WEATHER_URL}?q=${t}&appid=${this.WEATHER_API_KEY}&units=metric&lang=ru`,n=await fetch(s);if(!n.ok)throw new Error(`HTTP response status ${n.status}`);const a=await n.json();e=new r(a)}catch(t){console.error(`Error in API.getWeatherInfoByLocationName: ${t.message}`)}return e}},l=t=>null!=t,h=new class{saveWeatherInfo(t){const e=JSON.parse(localStorage.getItem("weatherHistory")??"[]").filter((e=>e.city!==t.city));e.unshift(t),localStorage.setItem("weatherHistory",JSON.stringify(e.slice(0,10)))}validateCoord(t){return t instanceof e&&(s=t.latitude,l(s)&&+s<=90&&+s>=-90)&&(r=t.longitude,l(r)&&+r<=180&&+r>=-180);var r,s}validateWeatherInfo(t){return t instanceof r&&l(t.city)&&l(t.temp)&&"number"==typeof t.temp&&this.validateCoord(t.coord)}};new class extends t{#t;#e;#r;constructor(t,e=new r){super(t,e),this.#t=new n(document.querySelector("#weather-main")),this.#e=new a(document.querySelector("#weather-map")),this.#r=new i(document.querySelector("#weather-history")),this.events={"submit@#form":t=>{t?.preventDefault(),this.search()},"click@#weather-history":t=>{const e=t?.target.closest(".weather-history__item");e&&this.selectItemFromWeatherHistory(e.dataset.whItemId)}}}onMount(){c.getCurrentLocationInfo().then((t=>c.getWeatherInfoByLocationCoord(t.latitude,t.longitude))).then((t=>this.setState(t))).catch((t=>console.error(t)))}render(){return'<main class="main">\n                    <section class="section">\n                        <h1 class="title">Weather App</h1>\n\n                        <form class="form" id="form">\n                            <input type="text" placeholder="Enter an address or city name" class="input" id="input">\n\n                            <button type="submit" class="btn" id="btn">Enter</button>\n                        </form>\n\n                        <div class="weather-info" id="weather-info">\n                            <div class="weather-info__item weather-main" id="weather-main"></div>\n                            <div class="weather-info__item weather-map" id="weather-map"></div>\n                            <div class="weather-info__item weather-history" id="weather-history"></div>\n                        </div>\n                    </section>\n                </main>'}setState(t){h.validateWeatherInfo(t)&&(h.saveWeatherInfo(t),this.state=t,this.#t.setState(this.state),this.#e.setState(this.state.coord),this.#r.setState(localStorage.getItem("weatherHistory")?{weatherHistory:JSON.parse(localStorage.getItem("weatherHistory"))}:{}))}async selectItemFromWeatherHistory(t){if(!l(t))return;const e=JSON.parse(localStorage.getItem("weatherHistory")??"[]"),r=await c.getWeatherInfoByLocationCoord(e[+t].coord.latitude,e[+t].coord.longitude);this.setState(r)}async search(){const t=document.getElementById("input");try{const e=await c.getWeatherInfoByLocationName(t.value);this.setState(e)}catch(t){console.error(`Error in AppComponent.search: ${t}`)}finally{t.value=""}}}(document.querySelector("body"))})();
//# sourceMappingURL=main.js.map